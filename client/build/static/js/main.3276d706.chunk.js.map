{"version":3,"sources":["Nav.js","components/EditPatient.js","components/ListPatient.js","Patients.js","components/SearchPatient.js","Search.js","components/InputPatient.js","AddPatient.js","App.js","index.js"],"names":["Nav","className","href","src","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","EditPatient","patients","useState","fio","setFio","gender","setGender","birthday","setBirthday","locat","setLocat","numoms","setnumoms","UpdatePatient","e","a","preventDefault","body","fetch","person_id","method","headers","JSON","stringify","window","location","console","error","message","class","onClick","data-dismiss","value","onChange","target","ListPatient","setPatients","deletePatient","filter","getPatients","response","json","jsonData","useEffect","scope","map","key","PageTransition","in","opacity","out","Patients","div","initial","animate","exit","variants","SearchPatient","name","setName","onSubmitForm","parseResponse","onSubmit","placeholder","length","Search","InpuptPatient","setbirthday","setlocat","numOms","setnumOms","useForm","register","handleSubmit","errors","data","log","ref","required","minLength","oms","AddPatient","InputPatient","Home","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3276d706.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom';\n\n//components\n\nfunction Nav() {\n  return (\n    <Fragment>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\"#\"><img src=\"/images/logo.png\" alt=\"\"/></a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                  <Link  className=\"nav-link\" to=\"/\">\n                      Home\n                  </Link>\n              </li>\n              <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/addpatient\">\n                    Add patient\n                  </Link>\n              </li>\n              <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/patients\">\n                      List patients\n                  </Link> \n              </li>\n              <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/search\">\n                    Search\n                  </Link>\n              </li>\n          </ul>\n        </div>\n      </nav>\n    </Fragment>\n  ); \n}\n\nexport default Nav;\n","import React, {Fragment, useState} from \"react\";\n\nconst EditPatient = ({ patients }) => {\n    const [fio, setFio] = useState(patients.fio);\n    const [gender, setGender] = useState(patients.gender);\n    const [birthday, setBirthday] = useState(patients.birthday);\n    const [locat, setLocat] = useState(patients.locat);\n    const [numoms, setnumoms] = useState(patients.numoms);\n\n    //edit patient func\n\n    const UpdatePatient = async e => {\n      e.preventDefault();\n      try {\n        const body = {fio, gender, birthday, locat, numoms};\n\n        //proxy\n\n        const response = await fetch(`http://5-63-159-23.ovz.vps.regruhosting.ru:5000/patients/${patients.person_id}`,{\n        method: \"PUT\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify(body)\n      })\n\n      window.location = \"/patients\";\n      } catch (err) {\n        console.error(err.message);\n      }\n    };\n\n    return (\n        <Fragment>\n        <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target={`#id${patients.person_id}`}>\n          Edit\n        </button>\n\n        {/* \n          id = id10\n         */}\n        <div class=\"modal\" id={`id${patients.person_id}`}  onClick={() => setFio(patients.fio)}>\n          <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n        \n              <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Edit patient</h4>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n              </div>\n              <div class=\"modal-body\">\n                <h5>Full name</h5>\n                <input type=\"text\" className=\"form-control\" value={fio} onChange={e => setFio(e.target.value)} />\n                {/* <input type=\"text\" className=\"form-control\" value={gender} onChange={e => setGender(e.target.value)}/> */}\n                <h5>Gender</h5>\n                <select className=\"form-control\" value={gender} onChange={e => setGender(e.target.value)}>\n                  <option>Male</option>\n                  <option>Female</option>\n                </select>\n                <h5>Birthday</h5>\n                <input type=\"date\" className=\"form-control\" value={birthday} onChange={e => setBirthday(e.target.value)}/>\n                <h5>Address</h5>\n                <input type=\"text\" className=\"form-control\" value={locat} onChange={e => setLocat(e.target.value)}/>\n                <h5>OMS</h5>\n                <input type=\"text\" className=\"form-control\" value={numoms} onChange={e => setnumoms(e.target.value)}/>\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-warning\" data-dismiss=\"modal\" onClick={e => UpdatePatient(e)}>Edit</button>\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n              </div>\n        \n            </div>\n          </div>\n        </div></Fragment>\n    )\n}\n\nexport default EditPatient;\n","import React, {Fragment, useEffect, useState} from \"react\";\n\nimport EditPatient from \"./EditPatient\";\n\nconst ListPatient =() => {\n    const [patients, setPatients] = useState([]);\n\n    // delete patient fun\n    \n    const deletePatient = async (id) => {\n        try {   \n            const deletePatient = await fetch(`http://5-63-159-23.ovz.vps.regruhosting.ru:5000/patients/${id}`, {\n                method: \"DELETE\"\n            });\n\n            setPatients(patients.filter(patients => patients.person_id !== id));\n            // console.log(deletePatient);\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    // get patients to list\n    const getPatients = async () => {\n        try {\n            \n            const response = await fetch(\"/patients\")\n            const jsonData = await response.json()\n            \n            setPatients(jsonData);\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    useEffect(() => {\n        getPatients();\n    }, []);\n    // console.log(patients);\n    return <Fragment>\n        <h1 className=\"text-center mt-5\">List patient</h1>\n        <table className=\"table mt-3\">\n            <thead>\n            <tr>\n                <th scope=\"col\">Full name</th>\n                <th scope=\"col\">Gender</th>\n                <th scope=\"col\">Birthday</th>\n                <th scope=\"col\">Address</th>\n                <th scope=\"col\">OMS</th>\n                <th scope=\"col\">Edit</th>\n                <th scope=\"col\">Delete</th>\n            </tr>\n            </thead>\n            <tbody>\n            {/* <tr>\n                <th scope=\"row\">1</th>\n                <td>Mark</td>\n                <td>Otto</td>\n                <td>@mdo</td>\n            </tr>  */}\n            {patients.map(patients => (\n                <tr key={patients.person_id}>\n                    <td>{patients.fio}</td>\n                    <td>{patients.gender}</td>\n                    <td>{patients.birthday}</td>\n                    <td>{patients.locat}</td>\n                    <td>{patients.numoms}</td>\n                    <td><EditPatient patients={patients} /></td>\n                    <td><button \n                        className=\"btn btn-danger\" \n                        onClick={() => deletePatient(patients.person_id)}\n                        >\n                        Delete\n                        </button>\n                    </td>\n                </tr>\n            ))}\n            </tbody>\n        </table>\n  </Fragment>\n};\n\nexport default ListPatient;\n","import React, { Fragment } from 'react';\nimport './App.css';\nimport { motion } from 'framer-motion';\n\n//components\nimport ListPatient from \"./components/ListPatient\";\n\n//page transition routing\nconst PageTransition = {\n  in: {\n    opacity: 1\n  },\n  out: {\n    opacity: 0\n  }\n};\n\nfunction Patients() {\n  return (\n    <Fragment>\n      <motion.div \n        className=\"container\"\n        initial=\"out\"\n        animate=\"in\"\n        exit=\"out\"\n        variants={PageTransition}\n      >\n        <ListPatient />\n      </motion.div>\n    </Fragment>\n  ); \n}\n\nexport default Patients;\n","import React, { Fragment, useState } from \"react\";\n\nimport EditPatient from \"./EditPatient\";\nconst SearchPatient = () => {\n\n    const [name, setName] = useState(\"\");\n    const [patients, setPatients] = useState([]);\n\n\n    // delete patient fun\n    \n    const deletePatient = async (id) => {\n        try {   \n            const deletePatient = await fetch(`http://5-63-159-23.ovz.vps.regruhosting.ru:5000/patients/${id}`, {\n                method: \"DELETE\"\n            });\n\n            setPatients(patients.filter(patients => patients.person_id !== id));\n            // console.log(deletePatient);\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    //search\n    const onSubmitForm = async e => {\n        e.preventDefault()\n        try { \n            const response = await fetch(`http://5-63-159-23.ovz.vps.regruhosting.ru:5000/users/?name=${name}`);\n\n            const parseResponse = await response.json();\n\n            setPatients(parseResponse);\n        } catch (err) { \n            console.error(err.message);\n        }\n    }\n    return (\n        <Fragment>\n            <div className=\"container\">\n                <h1 className=\"my-5\">Search</h1>\n                <form className=\"d-flex\" onSubmit={onSubmitForm}>\n                    <input \n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"Search\"\n                        className=\"form-control\"\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                    />\n                    <button className=\"btn btn-success\">Submit</button>\n                </form>\n                <table className=\"table my-5\">\n                    <thead>\n                        <tr>\n                            <th>Full name</th>\n                            <th>Gender</th>\n                            <th>Birthday</th>\n                            <th>Address</th>\n                            <th>Edit</th>\n                            <th>Delete</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {patients.map(patients => (\n                            <tr>\n                                <td>{patients.fio}</td>\n                                <td>{patients.gender}</td>\n                                <td>{patients.birthday}</td>\n                                <td>{patients.locat}</td>\n                                <td><EditPatient patients={patients} /></td>\n                                <td><button \n                                    className=\"btn btn-danger\" \n                                    onClick={() => deletePatient(patients.person_id)}\n                                    >\n                                    Delete\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n                {patients.length === 0 && <p>No result Found</p>}\n            </div>\n        </Fragment>\n    );\n};\n\nexport default SearchPatient;\n","import React, { Fragment } from 'react';\nimport './App.css';\nimport { motion } from 'framer-motion';\n\n//components\nimport SearchPatient from \"./components/SearchPatient\";\n\n//page transition routing\nconst PageTransition = {\n  in: {\n    opacity: 1\n  },\n  out: {\n    opacity: 0\n  }\n};\n\nfunction Search() {\n  return (\n    <Fragment>\n      <motion.div \n        className=\"container\"\n        initial=\"out\"\n        animate=\"in\"\n        exit=\"out\"\n        variants={PageTransition}\n      >\n        <SearchPatient />\n      </motion.div>\n    </Fragment>\n  ); \n}\n\nexport default Search;\n","import React, { Fragment, useState } from \"react\";\nimport {useForm} from 'react-hook-form';\n\n// import e from \"express\";\n\nconst InpuptPatient = () => {\n    const [fio, setFio] = useState(\"\");\n    const [gender, setGender] = useState(\"\");\n    const [birthday, setbirthday] = useState(\"\");\n    const [locat, setlocat] = useState(\"\");\n    const [numOms, setnumOms] = useState(\"\");\n\n    //validation \n    const { register, handleSubmit, errors } = useForm();\n    // const onSubmit = (data) => {\n    //     console.log(data);\n    // };\n\n    const onSubmit = async (data) => { //e\n        // e.preventDefault();\n        try {\n            const body = { fio, gender, birthday, locat, numOms };\n            const response = await fetch(\"http://5-63-159-23.ovz.vps.regruhosting.ru:5000/patients\", {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify(body)\n            });\n            \n\n            window.location= \"/addpatient\";\n            console.log(response);\n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n\n    return ( \n        <Fragment>\n            <h1 className=\"text-center mt-5\">Add patient</h1>\n            <form className=\"mt-5 add-form\" onSubmit={handleSubmit(onSubmit)}> \n                <div className=\"add-info\">\n                <h2>Full name</h2>    \n                    <input \n                        type=\"text\"\n                        className=\"form-control\" \n                        value={fio} \n                        onChange={e => setFio(e.target.value)}\n                        name=\"fio\"\n                        ref={register({ required: true, minLength: 2 })}\n                    />\n                    {/* commit for required */}\n                    {errors.fio && (\n                        <p className=\"text-valid\">This is required </p>\n                    )}\n\n                </div>    \n                <div className=\"add-info\">    \n                <h2>Gender</h2>                    \n                    <select className=\"form-control\" value={gender} onChange={e => setGender(e.target.value)} name=\"gender\" ref={register({ required: true })}>\n                        <option value=\"\">Select</option>\n                        <option value=\"female\">Female</option>\n                        <option value=\"male\">Male</option>\n                    </select>\n                    {errors.gender && (\n                        <p className=\"text-valid\">This is required </p>\n                    )}\n                </div>\n                <div className=\"add-info\">     \n                <h2>Birthday</h2>\n                    <input \n                        type=\"date\"\n                        className=\"form-control\" \n                        value={birthday} \n                        onChange={e => setbirthday(e.target.value)}\n                        name=\"birthday\"\n                        ref={register({ required: true })}\n                    />\n                    {errors.birthday && (\n                        <p className=\"text-valid\">This is required </p>\n                    )}\n                </div>\n                <div className=\"add-info\">     \n                <h2>Address</h2>\n                    <input \n                        type=\"text\"\n                        className=\"form-control\" \n                        value={locat} \n                        onChange={e => setlocat(e.target.value)}\n                        name=\"locat\"\n                        ref={register({ required: true })}\n                    />\n                    {errors.locat && (\n                        <p className=\"text-valid\">This is required </p>\n                    )}\n                </div>\n                <div className=\"add-info\">     \n                <h2>OMS</h2>\n                    <input \n                        type=\"text\"\n                        className=\"form-control\" \n                        value={numOms} \n                        onChange={e => setnumOms(e.target.value)}\n                        name=\"oms\"\n                        ref={register({ required: true, minLength: 16 })}\n                    />\n                    {errors.oms && (\n                        <p className=\"text-valid\">This is required </p>\n                    )}\n                </div>\n                <button className=\"btn btn-success\">Add</button>\n            </form>\n        </Fragment>\n    );\n}\n\nexport default InpuptPatient;\n","import React, { Fragment } from 'react';\nimport { motion } from 'framer-motion';\nimport './App.css';\n\n//components\nimport InputPatient from \"./components/InputPatient\";\n\n//page transition routing\nconst PageTransition = {\n  in: {\n    opacity: 1\n  },\n  out: {\n    opacity: 0\n  }\n};\n\nfunction AddPatient() {\n  return (\n    <Fragment>\n      <motion.div \n        className=\"container\"\n        initial=\"out\"\n        animate=\"in\"\n        exit=\"out\"\n        variants={PageTransition}\n      >\n        <InputPatient />\n      </motion.div>\n    </Fragment>\n  ); \n}\n\nexport default AddPatient;\n","import React, { Fragment } from 'react';\nimport './App.css';\nimport Nav from './Nav';\nimport Patients from './Patients'\nimport Search from './Search'\nimport AddPatient from './AddPatient'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport { AnimatePresence, motion } from 'framer-motion';\n\n//page transition routing\nconst PageTransition = {\n  in: {\n    opacity: 1\n  },\n  out: {\n    opacity: 0\n  }\n};\n\n//components\n// import InputPatient from \"./components/InputPatient\";\n// import ListPatient from \"./components/ListPatient\";\n// import SearchPatient from \"./components/SearchPatient\";\n\nfunction App() {\n  return (\n    // <Fragment>\n    //   <div className=\"container\">\n    //     <InputPatient />\n    //     <SearchPatient />\n    //     <ListPatient />\n    //   </div>\n    // </Fragment>\n    <Router>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"menu col-md-12\">\n            <Nav />\n            <AnimatePresence>\n              <Switch>\n                <Route path=\"/\" exact component={Home}/>\n                <Route path=\"/search\" component={Search}/>\n                <Route path=\"/patients\" component={Patients}/>\n                <Route path=\"/addpatient\" component={AddPatient}/>\n              </Switch> \n            </AnimatePresence>\n          </div>\n        </div>\n      </div>\n    </Router>\n  ); \n}\n\nconst Home = () => (\n  <motion.div\n   className=\"container-fluid\"\n   initial=\"out\"\n   animate=\"in\"\n   exit=\"out\"\n   variants={PageTransition}\n  >\n    <div className=\"row\">\n      <div className=\"col-md-12 main-page\">\n        <div className=\"jumbotron\">\n          <h1 className=\"display-4\">Hello, world!</h1>\n          <p className=\"lead\">This page was created to welcome!</p>\n          <hr className=\"my-4\"/>\n          <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. At ab, maiores veritatis tempora quas nihil recusandae saepe repellat qui et voluptas, fugit cumque laudantium blanditiis modi dicta natus quis tempore.</p>\n        </div> \n      </div>\n    </div>\n  </motion.div>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}